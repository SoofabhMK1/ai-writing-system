"""add character table

Revision ID: 033310e39181
Revises: ff7d23c51e6e
Create Date: 2025-09-10 13:51:25.916528

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "033310e39181"
down_revision: Union[str, Sequence[str], None] = "ff7d23c51e6e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "characters",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("gender", sa.String(), nullable=True),
        sa.Column("age", sa.Integer(), nullable=True),
        sa.Column("occupation", sa.String(), nullable=True),
        sa.Column("brief_introduction", sa.Text(), nullable=True),
        sa.Column(
            "physical_attributes",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "personality_traits", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "background_story", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "custom_fields", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_characters_id"), "characters", ["id"], unique=False)
    op.create_index(op.f("ix_characters_name"), "characters", ["name"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_characters_name"), table_name="characters")
    op.drop_index(op.f("ix_characters_id"), table_name="characters")
    op.drop_table("characters")
    # ### end Alembic commands ###
